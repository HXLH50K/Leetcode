# %%
from typing import List
from enum import Enum
import heapq


class ORDERTYPE(Enum):
    buy = 0
    sell = 1


class Solution:
    def getNumberOfBacklogOrders(self, orders: List[List[int]]) -> int:
        buy_backlog = []  # max heap
        sell_backlog = []  # min heap
        for order in orders:
            price, amount, order_type = order
            if order_type == ORDERTYPE.buy.value:
                while sell_backlog and amount > 0 and sell_backlog[0][0] <= price:
                    if amount > sell_backlog[0][1]:
                        amount -= heapq.heappop(sell_backlog)[1]
                    else:
                        sell_backlog[0][1] -= amount
                        amount = 0
                if amount > 0:
                    heapq.heappush(buy_backlog, [-price, amount])
            elif order_type == ORDERTYPE.sell.value:
                while buy_backlog and amount > 0 and -buy_backlog[0][0] >= price:
                    if amount > buy_backlog[0][1]:
                        amount -= heapq.heappop(buy_backlog)[1]
                    else:
                        buy_backlog[0][1] -= amount
                        amount = 0
                if amount > 0:
                    heapq.heappush(sell_backlog, [price, amount])

        res = sum(x[1] for x in sell_backlog) + sum(x[1] for x in buy_backlog)
        return int(res % (1e9 + 7))


orders = [
    [286791088, 798094111, 0],
    [270132718, 190673425, 0],
    [162145493, 63038428, 0],
    [917586234, 459670838, 0],
    [56705655, 684105415, 0],
    [979633297, 873012019, 1],
    [538081887, 397556342, 0],
    [335745593, 43076309, 0],
    [570656259, 35633247, 1],
    [713239998, 137657056, 1],
    [819696855, 759830612, 1],
    [26435212, 790945632, 1],
    [97041136, 268444554, 1],
    [92111248, 324097821, 0],
    [923090442, 412570485, 0],
    [786629891, 280254261, 1],
    [789438405, 139591698, 1],
    [853165425, 408218589, 0],
    [918972463, 727773439, 1],
    [100994505, 456158124, 0],
    [539811845, 598264780, 0],
    [354449870, 991103455, 1],
    [546878322, 841407093, 1],
    [961775285, 627215894, 1],
    [112407810, 139289530, 1],
    [562368390, 599841776, 0],
    [962951411, 892942017, 1],
    [797981924, 168611716, 0],
    [397662296, 417941689, 1],
    [104561073, 439700398, 1],
    [135685267, 617300259, 0],
    [46787891, 322655271, 1],
    [448381949, 320319716, 1],
    [378618697, 292776531, 1],
    [803949721, 803710552, 0],
    [564926072, 130850462, 0],
    [340495099, 981848852, 1],
    [842572379, 351719653, 0],
    [485131330, 300231397, 1],
    [487631412, 980202523, 1],
    [996021428, 796326963, 1],
    [875775273, 955181326, 0],
    [990300618, 621661558, 0],
    [144505487, 52319295, 1],
    [618050103, 916008477, 1],
    [841758347, 263458579, 1],
    [388241161, 855676122, 1],
    [432261198, 330055646, 1],
    [642378304, 365557201, 0],
    [31216170, 159294968, 1],
    [737920689, 237438772, 0],
    [973675810, 121076648, 0],
    [822835057, 441424728, 0],
    [871586369, 106539247, 1],
    [767357987, 114823374, 0],
    [280995627, 71697207, 0],
    [918210730, 78180691, 0],
    [690672572, 900078704, 0],
    [549193431, 925387284, 1],
    [23460593, 633893306, 1],
    [966381816, 910135503, 1],
    [762655634, 866995185, 1],
    [236153249, 957006218, 0],
    [642181364, 530015440, 0],
    [456817101, 485539261, 1],
    [584626991, 979921047, 0],
    [857018573, 517713410, 0],
    [874060607, 902804313, 1],
    [437346193, 216212554, 0],
    [801851939, 571218111, 1],
    [552208020, 940675048, 1],
    [82047753, 433515821, 1],
    [43077540, 377770580, 1],
    [6873285, 203753809, 1],
    [747319506, 742314739, 0],
    [580650000, 128896958, 1],
    [550284045, 952614463, 1],
    [833834368, 583072672, 1],
    [564387926, 441776763, 1],
    [647218670, 676420026, 1],
    [485892086, 324173812, 0],
    [543654114, 476938198, 0],
    [590552061, 829475366, 0],
    [271381554, 683613211, 0],
    [455457663, 790419242, 0],
    [395526922, 451903643, 1],
    [302317355, 707587320, 0],
    [965023202, 97148783, 0],
    [908754494, 5173679, 1],
    [288702557, 498607743, 1],
    [854599176, 839172022, 1],
    [682724429, 804623264, 1],
]
Solution().getNumberOfBacklogOrders(orders)

# %%
